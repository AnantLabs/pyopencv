// This file has been generated by Py++.

#include "boost/python.hpp"

#include "boost/python/suite/indexing/vector_indexing_suite.hpp"

#include "__ctypes_integration.pypp.hpp"

#include "cxcore_hpp_vec_wrapper.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_1.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_2.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_3.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_4.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_5.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_6.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_7.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_8.pypp.hpp"

#include "cxcore_hpp_vec_ext/cxcore_hpp_vec_ext_classes_9.pypp.hpp"

namespace bp = boost::python;

#include "ndarray.hpp"

BOOST_PYTHON_MODULE(cxcore_hpp_vec_ext){
    bp::def("asVec6d", &sdcpp::from_ndarray< cv::Vec<double,6> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<double,6> >, (bp::arg("inst_Vec6d")) );

    bp::def("asVec2w", &sdcpp::from_ndarray< cv::Vec<unsigned short,2> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<unsigned short,2> >, (bp::arg("inst_Vec2w")) );

    bp::def("asVec3s", &sdcpp::from_ndarray< cv::Vec<short,3> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<short,3> >, (bp::arg("inst_Vec3s")) );

    bp::def("asVec2i", &sdcpp::from_ndarray< cv::Vec<int,2> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<int,2> >, (bp::arg("inst_Vec2i")) );

    bp::def("asVec4w", &sdcpp::from_ndarray< cv::Vec<unsigned short,4> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<unsigned short,4> >, (bp::arg("inst_Vec4w")) );

    bp::def("asVec3w", &sdcpp::from_ndarray< cv::Vec<unsigned short,3> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<unsigned short,3> >, (bp::arg("inst_Vec3w")) );

    bp::def("asVec4b", &sdcpp::from_ndarray< cv::Vec<unsigned char,4> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<unsigned char,4> >, (bp::arg("inst_Vec4b")) );

    bp::def("asVec3b", &sdcpp::from_ndarray< cv::Vec<unsigned char,3> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<unsigned char,3> >, (bp::arg("inst_Vec3b")) );

    bp::def("asVec2b", &sdcpp::from_ndarray< cv::Vec<unsigned char,2> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<unsigned char,2> >, (bp::arg("inst_Vec2b")) );

    bp::def("asVec4s", &sdcpp::from_ndarray< cv::Vec<short,4> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<short,4> >, (bp::arg("inst_Vec4s")) );

    bp::def("asVec2s", &sdcpp::from_ndarray< cv::Vec<short,2> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<short,2> >, (bp::arg("inst_Vec2s")) );

    bp::def("asVec4i", &sdcpp::from_ndarray< cv::Vec<int,4> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<int,4> >, (bp::arg("inst_Vec4i")) );

    bp::def("asVec3i", &sdcpp::from_ndarray< cv::Vec<int,3> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<int,3> >, (bp::arg("inst_Vec3i")) );

    bp::def("asVec6f", &sdcpp::from_ndarray< cv::Vec<float,6> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<float,6> >, (bp::arg("inst_Vec6f")) );

    bp::def("asVec4f", &sdcpp::from_ndarray< cv::Vec<float,4> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<float,4> >, (bp::arg("inst_Vec4f")) );

    bp::def("asVec3f", &sdcpp::from_ndarray< cv::Vec<float,3> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<float,3> >, (bp::arg("inst_Vec3f")) );

    bp::def("asVec2f", &sdcpp::from_ndarray< cv::Vec<float,2> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<float,2> >, (bp::arg("inst_Vec2f")) );

    bp::def("asVec4d", &sdcpp::from_ndarray< cv::Vec<double,4> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<double,4> >, (bp::arg("inst_Vec4d")) );

    bp::def("asVec3d", &sdcpp::from_ndarray< cv::Vec<double,3> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<double,3> >, (bp::arg("inst_Vec3d")) );

    bp::def("asVec2d", &sdcpp::from_ndarray< cv::Vec<double,2> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Vec<double,2> >, (bp::arg("inst_Vec2d")) );

    bp::def("asScalar", &sdcpp::from_ndarray< cv::Scalar_<double> >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Scalar_<double> >, (bp::arg("inst_Scalar")) );

    bp::def("asRange", &sdcpp::from_ndarray< cv::Range >, (bp::arg("inst_ndarray")) );

    bp::def("asndarray", &sdcpp::as_ndarray< cv::Range >, (bp::arg("inst_Range")) );

    register_classes_1();

    register_classes_2();

    register_classes_3();

    register_classes_4();

    register_classes_5();

    register_classes_6();

    register_classes_7();

    register_classes_8();

    register_classes_9();
}

