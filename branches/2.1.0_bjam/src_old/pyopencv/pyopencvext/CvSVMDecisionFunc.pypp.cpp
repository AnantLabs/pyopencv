// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "ndarray.hpp"
#include "CvSVMDecisionFunc.pypp.hpp"

namespace bp = boost::python;

static sdcpp::ndarray CvSVMDecisionFunc_get_alpha( CvSVMDecisionFunc const & inst ){
    return sdcpp::new_ndarray1d(inst.sv_count, sdcpp::dtypeof< double >(), (void *)(inst.alpha));
}

static sdcpp::ndarray CvSVMDecisionFunc_get_sv_index( CvSVMDecisionFunc const & inst ){
    return sdcpp::new_ndarray1d(inst.sv_count, sdcpp::dtypeof< int >(), (void *)(inst.sv_index));
}

void register_CvSVMDecisionFunc_class(){

    bp::class_< CvSVMDecisionFunc >( "CvSVMDecisionFunc" )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< CvSVMDecisionFunc >() )    
        .def_readwrite( "rho", &CvSVMDecisionFunc::rho )    
        .def_readwrite( "sv_count", &CvSVMDecisionFunc::sv_count )    
        .add_property( "alpha", &::CvSVMDecisionFunc_get_alpha )    
        .add_property( "sv_index", &::CvSVMDecisionFunc_get_sv_index );

}
