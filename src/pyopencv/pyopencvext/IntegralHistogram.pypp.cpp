// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__call_policies.pypp.hpp"
#include "opencv_extra.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "IntegralHistogram.pypp.hpp"

namespace bp = boost::python;

static boost::python::object hist_45bfce131369d914df64f684506db8b4( ::sdopencv::IntegralHistogram & inst, ::cv::Rect rect ){
    bp::sequence out_hist2;
    std::vector<int, std::allocator<int> > out_hist3;
    inst.hist(rect, out_hist3);
    out_hist2 = convert_vector_to_seq(out_hist3);
    return bp::object( out_hist2 );
}

void register_IntegralHistogram_class(){

    bp::class_< sdopencv::IntegralHistogram >( "IntegralHistogram", bp::init< int, std::vector< float > const &, bp::optional< bool > >(( bp::arg("histSize"), bp::arg("ranges"), bp::arg("uniform")=(bool)(true) )) )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< sdopencv::IntegralHistogram >() )    
        .def( 
            "hist"
            , (boost::python::object (*)( ::sdopencv::IntegralHistogram &,::cv::Rect ))( &hist_45bfce131369d914df64f684506db8b4 )
            , ( bp::arg("inst"), bp::arg("rect") ) )    
        .def( 
            "__call__"
            , (void ( ::sdopencv::IntegralHistogram::* )( ::cv::Mat const & ) )( &::sdopencv::IntegralHistogram::operator() )
            , ( bp::arg("image") ) );

}
