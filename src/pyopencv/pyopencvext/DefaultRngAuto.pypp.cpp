// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "DefaultRngAuto.pypp.hpp"

namespace bp = boost::python;

void register_DefaultRngAuto_class(){

    { //::cv::DefaultRngAuto
        typedef bp::class_< cv::DefaultRngAuto, boost::noncopyable > DefaultRngAuto_exposer_t;
        DefaultRngAuto_exposer_t DefaultRngAuto_exposer = DefaultRngAuto_exposer_t( "DefaultRngAuto", bp::no_init );
        bp::scope DefaultRngAuto_scope( DefaultRngAuto_exposer );
        DefaultRngAuto_exposer.add_property( "this", pyplus_conv::make_addressof_inst_getter< cv::DefaultRngAuto >() );
        DefaultRngAuto_exposer.def( bp::init< >() );
        { //::cv::DefaultRngAuto::operator=
        
            typedef ::cv::DefaultRngAuto & ( ::cv::DefaultRngAuto::*assign_function_type )( ::cv::DefaultRngAuto const & ) ;
            
            DefaultRngAuto_exposer.def( 
                "assign"
                , assign_function_type( &::cv::DefaultRngAuto::operator= )
                , ( bp::arg("arg0") )
                , bp::return_self< >()
                , "\nWrapped function:"
    "\n    operator=" );
        
        }
        DefaultRngAuto_exposer.def_readonly( "def_state", cv::DefaultRngAuto::def_state );
        DefaultRngAuto_exposer.def_readonly( "old_state", &cv::DefaultRngAuto::old_state );
    }

}
