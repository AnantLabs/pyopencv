// This file has been generated by Py++.

#include "boost/python.hpp"
#include "__ctypes_integration.pypp.hpp"
#include "opencv_headers.hpp"
#include "opencv_converters.hpp"
#include "StarDetector.pypp.hpp"

namespace bp = boost::python;

static void call1( ::cv::StarDetector const & inst, ::cv::Mat const & image, bp::list & keypoints ){
    std::vector<cv::KeyPoint, std::allocator<cv::KeyPoint> > keypoints2;
    convert_from_object_to_T(keypoints, keypoints2);
    inst(image, keypoints2);
    convert_from_T_to_object(keypoints2, keypoints);
}

void register_StarDetector_class(){

    bp::class_< cv::StarDetector >( "StarDetector", bp::init< >() )    
        .add_property( "this", pyplus_conv::make_addressof_inst_getter< cv::StarDetector >() )    
        .def( bp::init< int, int, int, int, int >(( bp::arg("_maxSize"), bp::arg("_responseThreshold"), bp::arg("_lineThresholdProjected"), bp::arg("_lineThresholdBinarized"), bp::arg("_suppressNonmaxSize") )) )    
        .def( 
            "__call__"
            , (void (*)( ::cv::StarDetector const &,::cv::Mat const &,bp::list & ))( &call1 )
            , ( bp::arg("inst"), bp::arg("image"), bp::arg("keypoints") ) );

}
