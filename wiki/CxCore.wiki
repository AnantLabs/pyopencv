#summary Free functions in CxCore

= Reference =

== Old-style Functions ==

|| *OpenCV* || *PyOpenCV* ||
|| cvGetSubRect, cvGetSubArr, cvGetRows, cvGetCols || Mat's indexing and slicing functionality ||
|| cvGetRow || Mat.row ||
|| cvGetCol || Mat.col ||
|| cvGetDiag || Mat.diag ||
|| cvScalarToRawData, cvRawDataToScalar || (removed,  too low-level) ||
|| cvCrossProduct(x,y) || x.cross(y) ||
|| cvGetDimSize, cvGetDims || MatND.dims, SparseMat.dims ||
|| cvGetDim || MatND.size, SparseMat.size ||
|| cvPtr*D, cvGet*D, cvSet*D || Mat's indexing and slicing functionality ||
|| cvGetND, cvGetRealND, cvSetND, cvSetRealND, cvClearND || MatND's indexing and slicing functionality ||
|| cvGetMat, cvGetImage || (removed) ||
|| cvReshape || Mat.reshape ||
|| cvReshapeMatND || MatND.reshape ||
|| cvGetSize || Mat.size ||
|| cvRepeat || repeat ||
|| cvCreateData, cvSetData || Mat.create ||
|| cvReleaseData || no need to invoke, but if you insist: Mat.release ||
|| cvGetRawData || Mat.ndarray.data ||
|| cvCopy || {Mat, MatND, SparseMat}.copyTo ||
|| cvZero, cvSet, cvSetZero || {Mat, MatND, SparseMat}.setTo ||
|| cvSplit || split ||
|| cvMerge || merge ||
|| cvScale, cvConvert, cvCvtScale, cvConvertScale || {Mat, MatND, SparseMat}.convertTo ||
|| cvConvertScaleAbs, cvCvtScaleAbs || convertScaleAbs ||
|| cvCheckTermCriteria || (removed) ||
|| CvMixChannels || mixChannels ||
|| cvAXPY, cvAbsDiff, cvAbsDiffS || scaleAdd ||
|| cvAbs, cvScaleAdd || absdiff ||
|| cvAdd, cvAddS || add ||
|| cvSub, cvSubR, cvSubRS || subtract ||
|| cvMul || multiply ||
|| cvDiv || divide ||
|| cvAddWeighted || addWeighted ||
|| cvAnd, cvAndS || bitwise_and ||
|| cvOr, cvOrS || bitwise_or ||
|| cvXor, cvXorS || bitwise_xor ||
|| cvNot || bitwise_not ||
|| cvInRange, cvInRangeS || inRange ||
|| cvMin, cvMinS || min ||
|| cvMax, cvMaxS || max ||
|| cvCmp, cvCmpS || compare ||
|| cvCartToPolar || cartToPolar ||
|| cvPolarToCart || polarToCart ||
|| cvPow || pow ||
|| cvExp || exp ||
|| cvLog || log ||
|| cvFastArctan || fastAtan2 ||
|| cvCbrt || cubeRoot ||
|| cvSort || sort, sortIdx ||
|| cvCheckArray, cvCheckArr || checkRange ||
|| cvRandArr || randArr ||
|| cvRandShuffle || randShuffle ||
|| cvSolveCubic || solveCubic ||
|| cvSolvePoly || solvePoly ||
|| cvGEMM, cvMatMulAddEx, cvMatMulAdd, cvMatMul || gemm ||
|| cvTransform, cvMatMulAddS || transform ||
|| cvPerspectiveTransform || perspectiveTransform ||
|| cvMulTransposed || mulTransposed ||
|| cvTranspose, cvT || transpose ||
|| cvCompleteSymm || completeSymm ||
|| cvFlip, cvMirror || flip ||
|| cvInv, cvInvert || invert ||
|| cvSolve || solve ||
|| cvDet || determinant ||
|| cvTrace || trace ||
|| cvSetIdentity || setIdentity ||
|| cvEigenVV || eigen ||
|| cvMahalonobis, cvMahalanobis || Mahalanobis ||
|| cvCalcCovarMatrix || calcCovarMatrix ||
|| cvCalcPCA, cvProjectPCA, cvBackProjectPCA || PCA ||
|| cvSVBkSb, cvSVD || SVD ||
|| cvRange || range\_ ||
|| cvSum || sum ||
|| cvCountNonZero || countNonZero ||
|| cvAvg || mean ||
|| cvAvgSdv || meanStdDev ||
|| cvNorm || norm ||
|| cvNormalize || normalize ||
|| cvReduce || reduce ||
|| cvMinMaxLoc || minMaxLoc ||




== New-style Functions ==

|| *OpenCV* || *PyOpenCV* ||
|| cv::fromUtf16 || fromUtf16 ||
|| cv::toUtf16 || toUtf16 ||
|| cv::setNumThreads || setNumThreads ||
|| cv::getThreadNum || getThreadNum ||
|| cv::getTickCount || getTickCount ||
|| cv::getTickFrequency || getTickFrequency ||
|| cv::setUseOptimized || setUseOptimized ||
|| cv::useOptimized || useOptimized ||
|| cv::getElemSize || getElemSize ||
|| cv::add || add ||
|| cv::subtract || subtract ||
|| cv::multiply(a,b,c,scale) || c = scale*a*b ||
|| cv::divide(a,b,c,scale) || c = scale*a/b ||
|| cv::divide(scale,b,c) || c = scale/b ||
|| cv::scaleAdd(a,alpha,b,c) || c = a*alpha+b ||
|| cv::addWeighted(a,alpha,b,beta,gamma,c) || c = a*alpha+b*beta+gamma ||
|| cv::LUT || LUT ||
|| cv::sum || numpy.sum ||
|| cv::countNonZero || numpy.nonzero ||
|| cv::mean || mean ||
|| cv::meanStdDev || meanStdDev ||
|| cv::norm || norm ||
|| cv::normalize || normalize ||
|| cv::minMaxLoc || minMaxLoc ||
|| cv::reduce || reduce ||
|| cv::split(a) || use slices of a ||
|| cv::merge(a1,a2,...) || numpy.array((a1,a2,...)) ||
|| cv::mixChannels || similarly to 'split' and 'merge' ||
|| cv::repeat || repeat ||