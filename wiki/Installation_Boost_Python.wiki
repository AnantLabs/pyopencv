#summary Instructions for installing Boost and bjam

=Installing Boost and bjam=

==Get Boost==

PyOpenCV relies on Boost.Python (and partially on Boost.MPL) to wrap C/C++ code. Please follow the instructions below to get the Boost library:

  # Go to http://www.boost.org.
  # Download [http://sourceforge.net/projects/boost/files/boost/ Boost source distribution] version [http://sourceforge.net/projects/boost/files/boost/1.41.0/ 1.41.0] or later. There is a bug in using Boost.Python under Python 2.6.3 and later that has only been fixed very recently in Boost 1.41.0 (thanks to Guy K. Kloss for having pointed it out).
  # Extract the source distribution to somewhere on your platform. We refer to the extracted folder as `<boost_dir>`. It is not necessary to install Boost.
  # *On Linux:* in order for Boost.Python to compile, you may need to install the `python-dev` package, if it has not been installed.

Note that, right now you should rely on a Boost source distribution to install rather on any packages of Boost that have been pre-compiled for your platform. Unless you understand how PyOpenCV is compiled and linked against Boost libraries (which is fairly straightforward), just don't push your luck. This technical issue is mainly due to that I don't have time to tweak the setup file to deal with those situations yet. But I will try to do so.

Also, once you have finished installing PyOpenCV, you can safely delete the Boost source distribution. Currently, PyOpenCV is only and statically linked against Boost.Python. Last time I checked, the binary size of PyOpenCV linked against a static Boost Python library and that against a shared Boost Python library were almost the same, only less than 1% different. Therefore, to avoid linking issues, I decided to make linking PyOpenCV against a static Boost.Python library as the default option. You can easily modify the setup file to link against a shared Boost.Python library though.

==Get bjam==

  # PyOpenCV relies on Boost.Python to interface with OpenCV, and on Boost.Jam (or bjam) to compile its internal Python extension. The recommended way to get Boost.Jam is to [http://sourceforge.net/project/showfiles.php?group_id=7586&package_id=72941 download a prebuilt executable] from SourceForge. If a prebuilt executable is not provided for your platform or you are using Boost's sources in an unreleased state, it may be necessary to [http://www.boost.org/doc/tools/build/doc/html/jam/building.html build bjam from source] included in the Boost source tree.
  # To install Boost.Jam, copy the executable, called `bjam` or `bjam.exe` to a location accessible in your PATH. Go to the `<boost_dir>/tools/build/v2` directory and run `bjam --version`. You should see something like:
{{{
            Boost.Build V2 (Milestone N)
            Boost.Jam xx.xx.xx 
}}}
  # *On Ubuntu*: alternatively, run `sudo apt-get install bjam` to install bjam.